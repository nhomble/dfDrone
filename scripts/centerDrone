#!/usr/bin/env python2

'''
Subscribe to startDrone for the centroids and then
determine how then determine how the turtlebot should react
(including random movement) and then publish the information
for moveDrone
'''

# python built-ins
import sys
import time

# ROS
import roslib; roslib.load_manifest('dfDrone')
import rospy

# my messages/modules
# TODO need to import my DFDMessage

# globals, need to remember previous 
# centroid and last time I saw it
global_last_centroid = None
global_last_time = None

# in case I do not see the drone
# I keep track of how many bad "packets"
global_miss = 0

def main(argv=None):
	if argv is None:
		argv = sys.argv

	rospy.init_node('centerDrone')
	rospy.loginfo("centerDrone has initialized")

	dfd_sub = rospy.Subscriber('/dfDrone/startNode', DFDMessage, centroidCallback)
	rospy.spin()

def centroidCallback(message):
	rospy.logInfo("centroid callback in centerDrone")
	# TODO once I know I got my messages right
	pass

if __name__ == "__main__":
	sys.exit(main())
