#!/usr/bin/env python2

# python built-ins
import sys

# ROS
import roslib; roslib.load_manifest('dfDrone')
import rospy
import tf.transformations
from geometry_msgs.msg import Twist

'''
subscribe to centerDrone and given the
velocity messages, I determine the necessary
twist messages
'''

def main(argv=None):
	if argv is None:
		argv = sys.argv

	rospy.init_node('moveDrone')
	sub = rospy.Subscriber('centerDrone', moveCallback, DFDVelocity)
	rospy.spin()

def moveCallback(velocity):
	pass

if __name__ == "__main__":
	sys.exit(main())
